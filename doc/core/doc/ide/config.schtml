<html extends="IdePage">
<head title="IDE Config"/>

<body>

   <div id="content"><div id="mainSection">
       <div id="pageContent" exec="server">
         <div id="sectionContent">

<%= MarkDownPage.markDown(%>

## Installation Instructions 

First install the plugin:

* Download [sc4idea.jar](/download/) 
* Go to IntelliJ's Preferences, Plugin tab and choose "Install from disk"
* Select the sc4idea.jar and press OK.  Find the StrataCode plugin in the plugins list, and enable it.  Then restart IntelliJ.

If you have the StrataCode source (scc-src.zip or access to the private git repo), go to Option #2.

### Option #1: Quickstart to run examples with no StrataCode source

* Run IntelliJ and choose 'Create New Project' from the setup wizard or ...  
* Choose StrataCode from the list of available project types
<% ) %>

           <img class="centerImageBlock" src="/images/ide/newProject1.png" alt="New project dialog - step 1"/>

<%= MarkDownPage.markDown(%>

* Choose your JDK (1.8) and click Next
* Enable Install layers from repository URL and use the default URL (https://github.com/stratacode/)
* Enter a comma separated list of bundle names to install.  Enter a comma separated list including at least 'coreFramework, example'.  Add 'managementUI' to run the management UI examples.

<% ) %>

           <img class="centerImageBlock" src="/images/ide/newProject3.png" 
                alt="New project dialog - step 3"/>

<%= MarkDownPage.markDown(%>

* Enter a name for your project and click OK to build the project.  It will take a few seconds to check the code out of git, and generate the indexes.

<% ) %>

           <img class="centerImageBlock" src="/images/ide/newProject4.png" 
                alt="New project dialog - step 4"/>

<%= MarkDownPage.markDown(%>

* Test the configuration. First open up 'Layers view' - this may cause the indexes to be built the first time which takes a little while. 

Use the IDE 'goto class' operator to goto UnitConverter - expect to see several different versions of UnitConverter in different layers.

* Create a StrataCode run configuration. Choose a set of compiled layers and/or dynamic layers, give the configuration a name and run or debug.

### Option #2: Installation with StrataCode source 

It's best to develop StrataCode using the source. The code is generally readable, easily traceable with stack traces, and possible to debug by inspection when things go wrong.

To build and debug StrataCode itself from source, along with the apps built on it, download the 'scc' source distribution (see Jeff for access). 

To checkout the StrataCode source:

    mkdir ~/scc
    cd ~/scc
    git clone https://github.com/stratacode/system.git .

Or unzip the scc-src.zip into ~/scc.

There are three directories in the source github repo: coreRuntime, fullRuntime, and system, each organized as separate IntelliJ modules you can import into your project.

From the Project Structure dialog, click on "Modules" and then "+", then "Import module".
Import all three IntelliJ modules into your project in this order: fullRuntime/fullRuntime.iml (first), coreRuntime/coreRuntime.iml (second) and then system/sc.iml.  This will let you debug the StrataCode source, and ensures that StrataCode uses the debugger source when it runs an application.

Select a Java SDK with version 1.8.

In the project structure dialog, click on Libraries and then "+" to add a new library from Maven and enter in: "jline:jline:2.15-SNAPSHOT" as the maven spec.

Save changes in the project structure dialog.

Create a StrataCode module. Point it to a directory that contains the 'bundles' directory 

If you have already created an SC module and later want to add the "sc" source module, go to the module, remove the dependency on the "SCLib" library and add module dependencies on fullRuntime, coreRuntime and sc/system (in that order).  The fullRuntime has to be ahead of coreRuntime in the dependency list so we pick up the complete versions of the runtime apis.

Make the project to compile the StrataCode source (so the StrataCode plugin can find the classes for StrataCode itself).

One final manual step: In the StrataCode module directory, create the file scSourcePath with a path of: StrataCodeModule/conf/scSourcePath. It's contents should be one line pointing to the 'sc' directory you checked out from git (the directory that contains coreRuntime, fullRuntime, and system) - e.g. ~/scc. This is important so that any source code required to generate Javascript comes from your git repository, not the "scrt-core-src.jar" file that's part of SCLib.

Here are the source paths and excluded folders in the project structure dialog using source:

<% ) %>
          
           <img class="centerImageBlock" src="/images/projectStructure.png" 
                alt="Project structure - source paths"/>

           and the dependencies: <p/>

           <img class="centerImageBlock" src="/images/ide/projStructureDeps.png"
                alt="Project structure - dependencies"/>

<%= MarkDownPage.markDown(%>

## Additional settings

If you have problems with the editor improperly reformatting a .sc* file after you insert a close brace, go to IntelliJ's preferences. Under: Editor, General, Smart Keys, disable "Reformat block on typing '}'"

## Manual steps

### Create a StrataCode project

Create a project directory (e.g. ~/IdeaProjects/myProj) inside of that a bundles directory.  Inside of "bundles" check out the git repositories for the coreFramework:

    cd ~/IdeaProjects/myProj/bundles/
    git clone https://github.com/stratacode/coreFramework.git

In IntelliJ create a new Empty StrataCode project that points to ~/IdeaProjects/myProj

Check out the examples bundle:

    cd ~/IdeaProjects/myProj/bundles
    git clone https://github.com/stratacode/examples.git

In IntelliJ, to make these bundles active mark them as 'Source' directories.

(TODO: there's a bug where you currently need to invalidate caches and restart after adding a layer bundle to rebuild the indexes)

### Add a StrataCode module to a Java project

It's easy to add StrataCode to an existing Java project. 

Use New-&gt;"Module..." in IntelliJ. Choose a directory with one or more layer bundles (i.e. a bundles directory containing one or more directories that are in teh layer path - defining layer groups and directories). Make sure the bundle directories are marked as an intelliJ 'sources root' by right clicking on them and choosing 'Mark directory as...' then choosing Sources root.

(Note: we've only tested using one StrataCode module per project, but in general it's easy to add, include, exclude bundles of layers from the one module so it might not be a use case we need to support).

<% ) %>
         </div>
      </div>
   </div></div>
</body>
</html>
